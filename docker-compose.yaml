version: '3.8'

services:
  # Auth Service --------------------------------
  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    ports:
      - '4003:8080'
    environment:
      - DATABASE_URL=postgresql://admin:password@postgres:5432/auth_db?schema=public
    volumes:
      - ./services/auth:/app
    networks:
      - healthcare-appointment-system-network
    depends_on:
      - postgres

  # User Service --------------------------------
  user-service:
    build:
      context: ./services/user
      dockerfile: Dockerfile
    ports:
      - '4000:8080'
    environment:
      - DATABASE_URL=postgresql://admin:password@postgres:5432/user_db?schema=public
    volumes:
      - ./services/user:/app
    networks:
      - healthcare-appointment-system-network
    depends_on:
      - postgres

  # PostgreSQL Database -----------------------------------
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - '5432:5432'
    networks:
      - healthcare-appointment-system-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'auth']
      interval: 30s
      timeout: 30s
      retries: 3

  # PgAdmin ------------------------------------
  pgadmin:
    image: dpage/pgadmin4
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - '5050:80'
    networks:
      - healthcare-appointment-system-network
    depends_on:
      - postgres

  # Redis-Stack -------------------------------
  redis-stack:
    image: redis/redis-stack:latest
    environment:
      - REDIS_ARGS=--save 900 1
    ports:
      - '6379:6379'
      - '8001:8001'
    networks:
      - healthcare-appointment-system-network
    volumes:
      - redis-data:/var/lib/redis-stack

  # RabbitMQ -----------------------------------
  rabbitmq:
    image: rabbitmq:3.8-management
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - healthcare-appointment-system-network
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  # ------------------------------------------

networks:
  healthcare-appointment-system-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  rabbitmq-data:
