version: '3.8'

services:
  # Auth Service --------------------------------
  auth:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    ports:
      - '4003:8080'
    environment:
      - DATABASE_URL=postgresql://admin:password@postgres:5432/auth_db?schema=public
      - JWT_SECRET=Secret_Key
      - USER_SERVICE_URL=http://user:8080
      - EMAIL_SERVICE_URL=http://email:8080

    volumes:
      - ./services/auth:/app
    networks:
      - healthcare-appointment-system-network
    depends_on:
      - postgres
      - user
      - email

  # User Service --------------------------------
  user:
    build:
      context: ./services/user
      dockerfile: Dockerfile
    ports:
      - '4000:8080'
    environment:
      - DATABASE_URL=postgresql://admin:password@postgres:5432/user_db?schema=public
    volumes:
      - ./services/user:/app
    networks:
      - healthcare-appointment-system-network
    depends_on:
      - postgres

  # Appointment Service -------------------------
  appointment:
    build:
      context: ./services/appointment
      dockerfile: Dockerfile
    ports:
      - '4001:8080'
    environment:
      - DATABASE_URL=postgresql://admin:password@postgres:5432/appointment_db?schema=public
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - REDIS_HOST=redis-stack
      - REDIS_PORT=6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - ./services/appointment:/app
    networks:
      - healthcare-appointment-system-network
    depends_on:
      - postgres
      - rabbitmq
      - redis-stack

  # EHR Service --------------------------------
  ehr:
    build:
      context: ./services/EHR
      dockerfile: Dockerfile
    ports:
      - '4002:8080'
    environment:
      - DATABASE_URL=postgresql://admin:password@postgres:5432/ehr_db?schema=public
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - REDIS_HOST=redis-stack
      - REDIS_PORT=6379
    volumes:
      - ./services/ehr:/app
    networks:
      - healthcare-appointment-system-network
    depends_on:
      - postgres
      - rabbitmq
      - redis-stack

  # # Notification Service -------------------------------
  # notification:
  #   build:
  #     context: ./services/notification
  #     dockerfile: Dockerfile
  #   ports:
  #     - '4005:8080'
  #   environment:
  #     - DATABASE_URL=postgresql://admin:password@postgres:5432/notification_db?schema=public
  #     - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
  #   volumes:
  #     - ./services/notification:/app
  #   networks:
  #     - healthcare-appointment-system-network
  #   depends_on:
  #     - postgres
  #     - rabbitmq

  # Email Service -------------------------------
  email:
    build:
      context: ./services/email
      dockerfile: Dockerfile
    ports:
      - '4006:8080'
    environment:
      - DATABASE_URL=postgresql://admin:password@postgres:5432/email_db?schema=public
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
    volumes:
      - ./services/email:/app
    networks:
      - healthcare-appointment-system-network
    depends_on:
      - postgres
      - mailhog

  # PostgreSQL Database -----------------------------------
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - '5433:5432'
    networks:
      - healthcare-appointment-system-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'auth']
      interval: 30s
      timeout: 30s
      retries: 3

  # PgAdmin ------------------------------------
  pgadmin:
    image: dpage/pgadmin4
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - '5050:80'
    networks:
      - healthcare-appointment-system-network
    depends_on:
      - postgres

  # Redis-Stack -------------------------------
  redis-stack:
    image: redis/redis-stack:latest
    environment:
      - REDIS_ARGS=--save 900 1
      - REDIS_HOST=redis-stack
      - REDIS_PORT=6379
    ports:
      - '6379:6379'
      - '8002:8001'
    networks:
      - healthcare-appointment-system-network
    volumes:
      - redis-data:/var/lib/redis-stack

  # RabbitMQ -----------------------------------
  rabbitmq:
    image: rabbitmq:3.8-management
    ports:
      - '5672:5672' # AMQP port
      - '15672:15672' # HTTP port
    networks:
      - healthcare-appointment-system-network
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  # MailHog -----------------------------------
  mailhog:
    image: mailhog/mailhog
    ports:
      - '1025:1025' # SMTP port
      - '8025:8025' # Web UI (HTTP) port
    networks:
      - healthcare-appointment-system-network
    volumes:
      - mailhog-data:/var/lib/mailhog

  # Elasticsearch -------------------------------
  elasticsearch:
    image: elasticsearch:7.9.2
    environment:
      - discovery.type=single-node
      - 'ES_JAVA_OPTS=-Xms1024m -Xmx1024m' # 1GB of memory allocated to JVM  heap size
    ports:
      - '9200:9200' # HTTP port
      - '9300:9300' # TCP port
    networks:
      - healthcare-appointment-system-network
    volumes:
      - elasticsearch-data:/var/lib/elasticsearch

  # Kibana -----------------------------------
  kibana:
    image: kibana:7.9.2
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - '5601:5601' # HTTP port
    networks:
      - healthcare-appointment-system-network
    depends_on:
      - elasticsearch

  # Custom API Gateway --------------------------------
  # api-gateway:
  #   build:
  #     context: ./api-gateway
  #     dockerfile: Dockerfile
  #   ports:
  #     - '8081:8081'
  #   environment:
  #     - PORT=8081
  #     - API_GATEWAY_URL='http://api-gateway:8081'
  #   volumes:
  #     - ./api-gateway:/app
  #   networks:
  #     - healthcare-appointment-system-network
  #   depends_on:
  #     - auth
  #     - user
  #     - email
  #     - redis-stack
  #     - rabbitmq

  # ------------------------------------------

networks:
  healthcare-appointment-system-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  rabbitmq-data:
  mailhog-data:
  elasticsearch-data:
